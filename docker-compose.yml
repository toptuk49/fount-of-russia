services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: fount
      POSTGRES_USER: fount
      POSTGRES_PASSWORD: fount
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fount -d fount"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth:
    build: ./services/auth_service
    environment:
      SECRET_KEY: dev-secret
      DEBUG: "1"
      POSTGRES_DB: fount
      POSTGRES_USER: fount
      POSTGRES_PASSWORD: fount
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    develop:
      watch:
        - path: ./services/auth_service
          action: rebuild
          target: /app

  likes:
    build: ./services/likes_service
    environment:
      DJANGO_SETTINGS_MODULE: likes_service.settings
      SECRET_KEY: dev-secret
      DEBUG: "1"
      POSTGRES_DB: fount
      POSTGRES_USER: fount
      POSTGRES_PASSWORD: fount
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    develop:
      watch:
        - path: ./services/likes_service
          action: rebuild
          target: /app

  feedback:
    build: ./services/feedback_service
    environment:
      SECRET_KEY: dev-secret-feedback
      DEBUG: "1"
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_CHAT_ID: ${TELEGRAM_CHAT_ID}
    depends_on:
      - db
    develop:
      watch:
        - path: ./services/feedback_service
          action: rebuild
          target: /app

  gateway:
    image: nginx:alpine
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    depends_on:
      - auth
      - likes
      - feedback

  frontend:
    build: ./frontend
    depends_on:
      - auth
      - likes
      - feedback
    develop:
      watch:
        - path: ./frontend
          action: rebuild
          target: /app

volumes:
  dbdata_micro:
